<%
    # RNB, A VIM COLORSCHEME TEMPLATE
    # Author:        Romain Lafourcade (https://github.com/romainl)
    # Canonical URL: https://gist.github.com/romainl/5cd2f4ec222805f49eca

    # This template is designed to help vimmers create their own colorschemes
    # without much effort.
    #
    # You will need Ruby to generate your colorscheme but Ruby knowledge is
    # not needed at all.
    #
    # The process is divided in four steps:
    #   1. start by editing your colorscheme's information,
    #   2. define your colors,
    #   3. define your highlight groups and links,
    #   4. and generate your colorscheme.

    # Step 1: information
    #
    # Make sure the name of your colorscheme is unique and attractive.
    # The description should fit in a single line with no linefeed.
    # 'background' can be "light" or "dark".
    information = {
        author:      "Alex Vear",
        email:       "av@axvr.io",
        name:        "photon",
        description: "A minimal and elegant dark colour scheme for Vim.",
        background:  "dark",
        webpage:     "https://github.com/axvr/photon.vim",
        licence:     "MIT Licence"
    }

    # Step 2: colors
    #
    # black = [       give each color a distinctive name
    #   "#000000",    hexadecimal color for GVim/MacVim and "true colors" terminals
    #   0,            integer between 0 and 255 for terminals supporting 256 colors
    #   "black"       color name for less capable color terminals, can be "darkred", "red",
    #                 "darkgreen", "green", "darkyellow", "yellow", "darkblue", "blue",
    #                 "darkmagenta", "magenta", "black", "darkgrey", "grey", "white"
    # ]
    #
    # If your colors are defined correctly, the resulting colorscheme is guaranteed
    # to work in GVim (Windows/Linux), MacVim, and any properly set up terminal emulator.
    #
    # The colors below are the first 16 colors of the xterm palette. They
    # are only here as an example so you can get rid of them, I won't be mad.

    # Background
    bg = ["#262626", 235, "black"]

    # Darker background shades
    bgd_1 = ["#1c1c1c", 234, "black"]
    bgd_2 = ["#121212", 233, "black"]

    # Lighter background shades
    bgl_1 = ["#303030", 236, "darkgray"]
    bgl_2 = ["#3a3a3a", 237, "darkgray"]
    bgl_3 = ["#444444", 238, "darkgray"]
    bgl_4 = ["#626262", 241, "darkgray"]

    # Foreground
    fg = ["#c6c6c6", 251, "white"]

    # Accents
    purple = ["#af87d7", 140, "darkmagenta"]
    orange = ["#d75f5f", 167, "red"]
    yellow = ["#af8700", 136, "darkyellow"]
    green = ["#5fd7a7", 10, "green"] # FIXME try nad merge the 2 greens together and fix the hex code for this
    green2 = ["#87af87", 108, "darkgreen"]
    blue = ["#5f87ff", 68, "blue"] # TODO improve this colour
    grey = ["#767676", 243, "darkgray"]
    teal = ["#00afd7", 38, "darkcyan"]
    red = ["#af5f87", 132, "darkred"] # TODO make brighter?

    # Step 3: highlights
    #
    # You can define highlight groups like this:
    #
    #   [ "Normal",       name of the highlight group
    #     white,          the color used for background color, or use "NONE", "fg" or "bg"
    #     darkgray,       the color used for foreground color, or use "NONE", "fg" or "bg"
    #     "NONE"          style, can be "bold", "underline", "reverse", "italic",
    #                     "standout", "NONE" or "undercurl"
    #   ]
    #
    # The sample above tells Vim to render normal text in dark gray against a white
    # background, without any styling.
    #
    # or link an highlight group to another:
    #
    #   [ "Title", "Normal" ]
    #
    # In GUI Vim, there is an additional color for the undercurl used to
    # highlight spelling mistakes:
    #
    #   [ "SpellBad",     name of the highlight group
    #     "NONE",         the color used for background color, or use "NONE", "fg" or "bg"
    #     red,            the color used for foreground color, or use "NONE", "fg" or "bg"
    #     "undercurl",    style
    #     red             color used for the undercurl
    #   ]
    #
    # The sample above tells Vim to render badly spelled words in red against the current
    # background, with a red undercurl.
    #
    # You can add any custom highlight group to the standard list below but you shouldn't
    # remove any if you want a working colorscheme.
    highlights = [
        [ "Normal", bg, fg, "NONE" ],
        [ "NonText", "NONE", bgl_2, "NONE" ],
        [ "Comment", "NONE", bgl_4, "NONE" ],

        [ "Constant", "NONE", purple, "NONE" ],
        [ "Character", "Constant" ],
        [ "Number", "Constant" ],
        [ "Float", "Number" ],
        [ "Boolean", "Constant" ],
        [ "String", "Constant" ],

        [ "Identifier", bg, fg, "NONE" ],
        [ "Function", "Identifier" ],

        [ "Statement", "NONE", grey, "NONE" ],
        [ "Conditonal", "Statement" ],
        [ "Repeat", "Statement" ],
        [ "Label", "Statement" ],
        [ "Keyword", "Statement" ],
        [ "Exception", "Statement" ],

        [ "Operator", "NONE", fg, "bold" ],

        [ "PreProc", "NONE", grey, "NONE" ],
        [ "Include", "PreProc" ],
        [ "Define", "PreProc" ],
        [ "Macro", "PreProc" ],
        [ "PreCondit", "PreProc" ],

        [ "Type", "NONE", fg, "NONE" ],
        [ "StorageClass", "Type" ],
        [ "Structure", "Type" ],
        [ "Typedef", "Type" ],

        [ "Special", "NONE", grey, "NONE" ],
        [ "SpecialChar", "Special" ],
        [ "Tag", "Special" ],
        [ "Delimiter", "Special" ],
        [ "SpecialComment", "Special" ],
        [ "Debug", "Special" ],

        [ "Error", "NONE", red, "NONE" ],
        [ "ErrorMsg", "NONE", red, "NONE" ],
        [ "Warning", "NONE", yellow, "NONE" ],
        [ "WarningMsg", "NONE", yellow, "NONE" ],
        [ "ModeMsg", "NONE", grey, "bold" ],
        [ "MoreMsg", "NONE", grey, "bold" ],
        [ "Question", "NONE", green2, "NONE" ],

        [ "Ignore", "NONE", "NONE", "NONE" ],
        [ "Todo", "NONE", orange, "bold" ],
        [ "Underlined", "NONE", fg, "underline" ],

        [ "StatusLine", bgl_2, purple, "NONE" ],
        [ "StatusLineNC", bgl_1, grey, "NONE" ],
        [ "StatusLineTerm", "StatusLine" ],
        [ "StatusLineTermNC", "StatusLineNC" ],
        [ "VertSplit", bgl_1, bgl_1, "NONE" ],
        [ "TabLine", bgl_1, grey, "NONE" ],
        [ "TabLineFill", bgl_1, grey, "NONE" ],
        [ "TabLineSel", bgl_2, purple, "NONE" ],
        [ "WildMenu", bgl_1, orange, "NONE" ],

        [ "Title", "NONE", blue, "NONE" ],

        [ "LineNr", "NONE", bgl_4, "NONE" ],
        [ "CursorLineNr", bgl_1, purple, "NONE" ],
        [ "Cursor", purple, fg, "NONE" ],
        [ "CursorLine", bgl_1, "NONE", "NONE" ],
        [ "CursorColumn", "CursorLine" ],
        [ "ColorColumn", bgd_1, "NONE", "NONE" ],
        [ "SignColumn", "NONE", green, "NONE" ],

        # TODO vim help docs (especially links)

        [ "Visual", bgl_3, "NONE", "NONE" ],
        [ "VisualNOS", bgl_4, "NONE", "NONE" ],

        [ "Pmenu", bgl_2, "NONE", "NONE" ],
        [ "PmenuSbar", bgl_1, "NONE", "NONE" ],
        [ "PmenuSel", bgl_1, purple, "NONE" ],
        [ "PmenuThumb", orange, "NONE", "NONE" ],

        [ "FoldColumn", "NONE", bgl_4, "NONE" ],
        [ "Folded", bgd_1, grey, "NONE" ],

        [ "SpecialKey", "NONE", grey, "NONE" ],
        [ "IncSearch", orange, bg, "NONE" ],
        [ "Search", teal, bg, "NONE" ],
        [ "Directory", "NONE", blue, "NONE" ],
        [ "MatchParen", "NONE", green, "bold" ],

        [ "SpellBad", "NONE", red, "underline" ],
        [ "SpellCap", "NONE", green2, "underline" ],
        [ "SpellLocal", "NONE", blue, "underline" ],
        [ "SpellRare", "NONE", yellow, "underline" ],

        [ "QuickFixLine", bgd_1, "NONE", "NONE" ],

        # TODO improve the colours used here
        [ "DiffAdd", "NONE", green2, "NONE" ],
        [ "DiffChange", "NONE", yellow, "NONE" ],
        [ "DiffDelete", "NONE", red, "NONE" ],
        [ "DiffText", "NONE", orange, "NONE" ],
        [ "diffAdded", "DiffAdd" ],
        [ "diffRemoved", "DiffDelete" ]

        # TODO improve colours for markdown, and org files
    ]

    # Step 4: generation
    #
    # From a separate shell:
    #
    #     $ erb -T - bar.erb > bar.vim
    #
    # From Vim:
    #
    #     :!erb -T - % > %:r.vim

    # Many thanks to Barry Arthur (https://github.com/dahu) for the original idea.

    # You don't need to edit anything beyond this line.
-%>
" Name:        <%= information[:name] %>.vim
" Author:      <%= information[:author] %> <<%= information[:email] %>>
" Webpage:     <%= information[:webpage] %>
" Description: <%= information[:description] %>
" Licence:     <%= information[:licence] %>

hi clear

if exists("syntax_on")
  syntax reset
endif

let colors_name = "<%= information[:name] %>"

if ($TERM =~ '256' || &t_Co >= 256) || has("gui_running")
<% for highlight in highlights -%>
<% if highlight.length == 2 -%>
    hi link <%= highlight[0] %> <%= highlight[1] %>
<% elsif highlight.length == 4 -%>
    hi <%= highlight[0] %> ctermbg=<%= highlight[1].kind_of?(String) ? highlight[1] : highlight[1][1] %> ctermfg=<%= highlight[2].kind_of?(String) ? highlight[2] : highlight[2][1] %> cterm=<%= highlight[3] %> guibg=<%= highlight[1].kind_of?(String) ? highlight[1] : highlight[1][0] %> guifg=<%= highlight[2].kind_of?(String) ? highlight[2] : highlight[2][0] %> gui=<%= highlight[3] %>
<% if highlight[0] == "Normal" -%>
    set background=<%= information[:background] %>
<% end -%>
<% else -%>
    hi <%= highlight[0] %> ctermbg=<%= highlight[1].kind_of?(String) ? highlight[1] : highlight[1][1] %> ctermfg=<%= highlight[2].kind_of?(String) ? highlight[2] : highlight[2][1] %> cterm=<%= highlight[3] %> guibg=<%= highlight[1].kind_of?(String) ? highlight[1] : highlight[1][0] %> guifg=<%= highlight[2].kind_of?(String) ? highlight[2] : highlight[2][0] %> gui=<%= highlight[3] %> guisp=<%= highlight[4].kind_of?(String) ? highlight[4] : highlight[4][0] %>
<% end -%>
<% end -%>
elseif &t_Co == 8 || $TERM !~# '^linux' || &t_Co == 16
    set t_Co=16
<% for highlight in highlights -%>
<% if highlight.length == 2 -%>
    hi link <%= highlight[0] %> <%= highlight[1] %>
<% else -%>
    hi <%= highlight[0] %> ctermbg=<%= highlight[1].kind_of?(String) ? highlight[1] : highlight[1][2] %> ctermfg=<%= highlight[2].kind_of?(String) ? highlight[2] : highlight[2][2] %> cterm=<%= highlight[3] %>
<% if highlight[0] == "Normal" -%>
    set background=<%= information[:background] %>
<% end -%>
<% end -%>
<% end -%>
endif

" Generated with RNB (https://gist.github.com/romainl/5cd2f4ec222805f49eca)
